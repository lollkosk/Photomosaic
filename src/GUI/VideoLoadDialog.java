/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Mosaic.FrameTile;
import Mosaic.ImageUtils;
import java.io.File;
import java.util.ArrayList;
import java.util.Random;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import org.opencv.core.Mat;
import org.opencv.highgui.VideoCapture;

/**
 *
 * @author Marek Zuzi
 */
public class VideoLoadDialog extends javax.swing.JDialog {
    
    //private VideoLoadProcess proc;
    private VideoCapture video;
    private File file;
    private Mat currFrame;
    private double sizeRatio;
    private Random r;
    private DefaultListModel<ImageIcon> model;
    private ArrayList<FrameTile> tiles;
    private ArrayList<FrameTile> result;

    /**
     * Creates new form VideoLoadDialog
     */
    public VideoLoadDialog(java.awt.Frame parent, File videoFile) {
        super(parent, true);
        
        r = new Random();
        result = null;
        model = new DefaultListModel<>();
        tiles = new ArrayList<>();
        currFrame = new Mat();
        file = videoFile;
        video = new VideoCapture(file.getPath());
        if(!video.isOpened()) {
            throw new IllegalArgumentException("File could not be decoded.");
        }
        
        initComponents();
        int width = (int)video.get(3);
        int height = (int)video.get(4);
        sizeRatio = Math.min(label_preview.getWidth()/((double)width), label_preview.getHeight()/((double)height));
        
        int frames = (int)video.get(7);
        slider_framePos.setMaximum(frames);
        slider_framePos.setValue(0);
        label_fileName.setText(file.getName());
        list_selectedFrames.setModel(model);
        label_tileCount.setText("Selected: 0");
    }
    
    public ArrayList<FrameTile> getFrames() {
        return result;
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label_fileName = new javax.swing.JLabel();
        label_preview = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        but_addFrame = new javax.swing.JButton();
        but_addRandom = new javax.swing.JButton();
        but_removeFrame = new javax.swing.JButton();
        but_OK = new javax.swing.JButton();
        but_cancel = new javax.swing.JButton();
        label_currFrame = new javax.swing.JLabel();
        label_tileCount = new javax.swing.JLabel();
        slider_framePos = new javax.swing.JSlider();
        jScrollPane2 = new javax.swing.JScrollPane();
        list_selectedFrames = new javax.swing.JList();

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("Resources/Strings"); // NOI18N
        setTitle(bundle.getString("videoDialogTitle")); // NOI18N
        setModal(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        label_fileName.setText("file name");

        label_preview.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label_preview.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        but_addFrame.setText(bundle.getString("add")); // NOI18N
        but_addFrame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_addFrameActionPerformed(evt);
            }
        });

        but_addRandom.setText(bundle.getString("addRand")); // NOI18N
        but_addRandom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_addRandomActionPerformed(evt);
            }
        });

        but_removeFrame.setText(bundle.getString("remove")); // NOI18N
        but_removeFrame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_removeFrameActionPerformed(evt);
            }
        });

        but_OK.setText(bundle.getString("ok")); // NOI18N
        but_OK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_OKActionPerformed(evt);
            }
        });

        but_cancel.setText(bundle.getString("cancel")); // NOI18N
        but_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_cancelActionPerformed(evt);
            }
        });

        label_currFrame.setText("selected frame num");

        label_tileCount.setText("selected fr count");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(but_addRandom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(but_addFrame, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(but_removeFrame, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label_currFrame)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(but_cancel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(but_OK))
                    .addComponent(label_tileCount))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(but_addFrame)
                    .addComponent(label_currFrame))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(but_addRandom)
                    .addComponent(label_tileCount))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(but_removeFrame)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(but_OK)
                    .addComponent(but_cancel))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        slider_framePos.setMajorTickSpacing(50);
        slider_framePos.setMinorTickSpacing(1);
        slider_framePos.setPaintTicks(true);
        slider_framePos.setSnapToTicks(true);
        slider_framePos.setValue(0);
        slider_framePos.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                slider_framePosStateChanged(evt);
            }
        });

        list_selectedFrames.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        list_selectedFrames.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        list_selectedFrames.setFixedCellHeight(115);
        list_selectedFrames.setFixedCellWidth(115);
        list_selectedFrames.setLayoutOrientation(javax.swing.JList.HORIZONTAL_WRAP);
        list_selectedFrames.setSelectionForeground(javax.swing.UIManager.getDefaults().getColor("List.selectionBackground"));
        list_selectedFrames.setVisibleRowCount(-1);
        jScrollPane2.setViewportView(list_selectedFrames);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(label_preview, javax.swing.GroupLayout.PREFERRED_SIZE, 586, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(276, 276, 276)
                        .addComponent(label_fileName))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(slider_framePos, javax.swing.GroupLayout.PREFERRED_SIZE, 586, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label_fileName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(label_preview, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(slider_framePos, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void slider_framePosStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_slider_framePosStateChanged
        if(slider_framePos.getValueIsAdjusting()) return;
        
        currFrame.release();
        video.set(1, slider_framePos.getValue());
        video.retrieve(currFrame);
        
        label_preview.setIcon(ImageUtils.createIcon(currFrame, sizeRatio));
        label_currFrame.setText("Frame "+slider_framePos.getValue());
    }//GEN-LAST:event_slider_framePosStateChanged

    private void but_OKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_OKActionPerformed
        result = tiles;
        video.release();
        currFrame.release();
        this.setVisible(false);
    }//GEN-LAST:event_but_OKActionPerformed

    private void but_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_cancelActionPerformed
        tiles.clear();
        video.release();
        currFrame.release();
        this.setVisible(false);
    }//GEN-LAST:event_but_cancelActionPerformed

    private void but_addFrameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_addFrameActionPerformed
        int i = slider_framePos.getValue();
        FrameTile t = new FrameTile(file, currFrame, i);
        if(!tiles.contains(t)) {
            tiles.add(t);
            model.addElement(t.getIcon());
            label_tileCount.setText("Selected: " + tiles.size());
        }
    }//GEN-LAST:event_but_addFrameActionPerformed

    private void but_addRandomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_addRandomActionPerformed
        int i = r.nextInt(slider_framePos.getMaximum());
        slider_framePos.setValue(i);
        FrameTile t = new FrameTile(file, currFrame, i);
        if(!tiles.contains(t)) {
            tiles.add(t);
            model.addElement(t.getIcon());
            label_tileCount.setText("Selected: " + tiles.size());
        }
    }//GEN-LAST:event_but_addRandomActionPerformed

    private void but_removeFrameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_removeFrameActionPerformed
        int modelIdx = list_selectedFrames.getSelectedIndex();
        if(modelIdx >= 0) {
            tiles.remove(modelIdx);
            model.remove(modelIdx);
            label_tileCount.setText("Selected: " + tiles.size());
        }
    }//GEN-LAST:event_but_removeFrameActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        video.release();
        currFrame.release();
    }//GEN-LAST:event_formWindowClosing


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton but_OK;
    private javax.swing.JButton but_addFrame;
    private javax.swing.JButton but_addRandom;
    private javax.swing.JButton but_cancel;
    private javax.swing.JButton but_removeFrame;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel label_currFrame;
    private javax.swing.JLabel label_fileName;
    private javax.swing.JLabel label_preview;
    private javax.swing.JLabel label_tileCount;
    private javax.swing.JList list_selectedFrames;
    private javax.swing.JSlider slider_framePos;
    // End of variables declaration//GEN-END:variables
}
